import pandas as pd, numpy as np, matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.model_selection import train_test_split

df = pd.DataFrame({
    'size': [1000, 1500, 1800, 2000, 2200, 2500, 2700, 3000, 3200, 3500],
    'price': [200000, 250000, 290000, 310000, 330000, 360000, 380000, 400000, 420000, 450000]
})

X, y = df[['size']], df['price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression().fit(X_train, y_train)
pred = model.predict(X_test)

plt.figure(figsize=(8,5))
plt.scatter(df['size'], df['price'], c='blue', label='Data')
plt.plot(df['size'], model.predict(X), c='red', label='Model')
plt.xlabel('Size (sq ft)'), plt.ylabel('Price'), plt.title('Linear Regression: Size vs Price')
plt.legend(), plt.grid(True), plt.tight_layout()
plt.show()

print(f"Coef: {model.coef_[0]:.2f}, Intercept: {model.intercept_:.2f}")
print(f"MSE: {mean_squared_error(y_test, pred):.2f}, R²: {r2_score(y_test, pred):.2f}")
