import pandas as pd, numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score

df = pd.DataFrame({
    'engine': [1.6, 2.0, 2.4, 3.0, 3.5, 4.0, 2.2, 1.8, 2.5, 3.2],
    'hp': [120, 150, 180, 220, 250, 280, 160, 130, 200, 240],
    'eff': [30, 28, 25, 22, 20, 18, 26, 29, 24, 21],
    'price': [20000, 25000, 28000, 32000, 35000, 40000, 27000, 22000, 30000, 34000]
})

X, y = df[['engine', 'hp', 'eff']], df['price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression().fit(X_train, y_train)
pred = model.predict(X_test)

print(f"Coef: {model.coef_}, Intercept: {model.intercept_:.2f}")
print(f"MSE: {mean_squared_error(y_test, pred):.2f}, R²: {r2_score(y_test, pred):.2f}")

sample = np.array([[2.8, 210, 23]])
print(f"Predicted price for sample {sample.tolist()[0]}: ₹{model.predict(sample)[0]:,.2f}")
